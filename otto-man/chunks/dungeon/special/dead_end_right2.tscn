[gd_scene load_steps=8 format=4 uid="uid://cai2ouwjuok7j"]

[ext_resource type="Script" path="res://chunks/dungeon/base_chunk.gd" id="2_4l14j"]
[ext_resource type="Texture2D" uid="uid://ci7v07sdxmrnf" path="res://Tile set/Palace TileMap 1.png" id="2_g7kcv"]
[ext_resource type="PackedScene" path="res://enemy/spawn_manager.tscn" id="3_n43he"]
[ext_resource type="PackedScene" path="res://enemy/enemy_spawner.tscn" id="4_swpoc"]

[sub_resource type="GDScript" id="GDScript_4qqq8"]
script/source = "@tool
extends Node2D
class_name BaseChunk

# Possible connection directions
enum Direction {
	LEFT,
	RIGHT,
	UP,
	DOWN
}

# Size configuration
@export var size_in_units: Vector2i = Vector2i(1, 1)
@export var debug_draw: bool = true
@export var size = Vector2(1920, 1088)

# Connections are determined by scene name
var connections: Array[Direction] = []

# Connection points - automatically updated based on size
var connection_points: Dictionary = {}
var base_size = Vector2(1920, 1088)
var actual_size: Vector2:
	get: return base_size * size_in_units

var chunk_type: String = \"basic\"  # Override in specific chunks
var spawn_manager: SpawnManager

# Connections dictionary to store connected chunks and their directions
var connected_chunks: Dictionary = {}

# Called when the node enters the scene tree
func _ready() -> void:
	_initialize_connections()  # Initialize connections first
	print(\"[BaseChunk] Initialized:\", name)
	print(\"  - Size:\", get_chunk_size())
	print(\"  - Connections:\", get_connections())
	
	# Initialize spawn manager
	spawn_manager = $SpawnManager
	if spawn_manager:
		var level = 1  # Default level
		var level_generator = get_tree().get_first_node_in_group(\"level_generator\")
		if level_generator:
			level = level_generator.current_level
		
		# Initialize spawn manager with chunk type and level
		spawn_manager.initialize(chunk_type, level)

func _initialize_chunk() -> void:
	print(\"[BaseChunk] Initializing chunk: \", name)
	print(\"  - Size: \", size_in_units)
	
	# Setup connection points
	_setup_connection_points()

func _initialize_connections() -> void:
	connections.clear()
	
	# Get the scene name for connection setup
	var scene_name = get_scene_file_path().get_file().get_basename()
	
	# Initialize connections based on scene name
	if scene_name == \"start_chunk\":
		connections = [Direction.RIGHT]
	elif scene_name == \"finish_chunk\":
		connections = [Direction.LEFT]
	elif scene_name == \"basic_platform\" or scene_name == \"combat_arena\":
		connections = [Direction.LEFT, Direction.RIGHT]
	elif scene_name == \"climbing_tower\":
		connections = [Direction.UP, Direction.DOWN]
	elif scene_name.begins_with(\"l_corner\"):
		if \"left_up\" in scene_name:
			connections = [Direction.LEFT, Direction.UP]
		elif \"left_down\" in scene_name:
			connections = [Direction.LEFT, Direction.DOWN]
		elif \"right_up\" in scene_name:
			connections = [Direction.RIGHT, Direction.UP]
		elif \"right_down\" in scene_name:
			connections = [Direction.RIGHT, Direction.DOWN]
	elif scene_name.begins_with(\"t_junction\"):
		if \"left\" in scene_name:
			connections = [Direction.RIGHT, Direction.UP, Direction.DOWN]
		elif \"right\" in scene_name:
			connections = [Direction.LEFT, Direction.UP, Direction.DOWN]
		elif \"up\" in scene_name:
			connections = [Direction.LEFT, Direction.RIGHT, Direction.DOWN]
		elif \"down\" in scene_name:
			connections = [Direction.LEFT, Direction.RIGHT, Direction.UP]
	elif scene_name == \"four_way_hub\":
		connections = [Direction.LEFT, Direction.RIGHT, Direction.UP, Direction.DOWN]

func _setup_connection_points() -> void:
	# Clear existing points
	connection_points.clear()
	
	# Get the ConnectionPoints node
	var points_node = get_node_or_null(\"ConnectionPoints\")
	if not points_node:
		print(\"  - Warning: No ConnectionPoints node found\")
		return
	
	# Add connection points based on available connections
	for direction in connections:
		_add_connection_point(points_node, direction)

func _add_connection_point(points_node: Node, direction: Direction) -> void:
	var point_name = Direction.keys()[direction].to_lower()
	var point = points_node.get_node_or_null(point_name)
	if point:
		connection_points[direction] = point
		print(\"  - Added connection point: \", point_name)

func has_connection(direction: Direction) -> bool:
	return direction in connections

func get_connection_point(direction: Direction) -> Node2D:
	return connection_points.get(direction)

func get_available_connections() -> Array[Direction]:
	return connections.duplicate()

# Debug drawing in editor
func _setup_debug_draw() -> void:
	if not debug_draw:
		queue_redraw()
		return
		
	# Update connection points
	_setup_connection_points()
	queue_redraw()

func _draw() -> void:
	if Engine.is_editor_hint():
		# Draw chunk bounds
		draw_rect(Rect2(Vector2.ZERO, size), Color.BLUE, false, 2.0)
		
		# Draw connection points
		for dir in connections:
			var point = _get_connection_point(dir)
			draw_circle(point, 10, Color.GREEN)

func _get_connection_point(dir: Direction) -> Vector2:
	match dir:
		Direction.LEFT: return Vector2(0, size.y / 2)
		Direction.RIGHT: return Vector2(size.x, size.y / 2)
		Direction.UP: return Vector2(size.x / 2, 0)
		Direction.DOWN: return Vector2(size.x / 2, size.y)
	return Vector2.ZERO

func get_chunk_size() -> Vector2:
	return Vector2(1920, 1088)

func get_connections() -> Array:
	# Override in specific chunks to define their connections
	return []

func get_chunk_position() -> Vector2:
	return position

func set_level(level: int) -> void:
	if spawn_manager:
		spawn_manager.set_level(level)

# Optional: Start spawning enemies with interval
func start_spawning(interval: float = 5.0) -> void:
	if spawn_manager:
		spawn_manager.start_all_spawning(interval)

# Clear all enemies in this chunk
func clear_enemies() -> void:
	if spawn_manager:
		spawn_manager.clear_all_enemies()

# Get active spawn points
func get_active_spawn_points() -> Array:
	if spawn_manager:
		return spawn_manager.get_active_spawn_points()
	return []

func connect_to(other_chunk: Node2D, direction: Direction) -> void:
	if not connected_chunks.has(direction):
		connected_chunks[direction] = other_chunk
		print(\"[BaseChunk] Connected %s to %s in direction %d\" % [name, other_chunk.name, direction])
		
		# Get opposite direction
		var opposite_direction = _get_opposite_direction(direction)
		
		# If other chunk is also a BaseChunk, connect it back
		if other_chunk.has_method(\"_receive_connection\"):
			other_chunk._receive_connection(self, opposite_direction)

func _receive_connection(other_chunk: Node2D, direction: Direction) -> void:
	if not connected_chunks.has(direction):
		connected_chunks[direction] = other_chunk
		print(\"[BaseChunk] Received connection from %s in direction %d\" % [other_chunk.name, direction])

func _get_opposite_direction(direction: Direction) -> Direction:
	match direction:
		Direction.LEFT: return Direction.RIGHT
		Direction.RIGHT: return Direction.LEFT
		Direction.UP: return Direction.DOWN
		Direction.DOWN: return Direction.UP
	return Direction.LEFT  # Default fallback

func get_connected_chunk(direction: Direction) -> Node2D:
	return connected_chunks.get(direction)

func has_connection_to(direction: Direction) -> bool:
	return connected_chunks.has(direction)
 
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_dqwby"]
texture = ExtResource("2_g7kcv")
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/terrain_set = 0
0:0/0/terrain = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 16, -12, 16, 16, -12, 16)
0:0/0/terrains_peering_bit/right_side = 0
0:0/0/terrains_peering_bit/bottom_right_corner = 0
0:0/0/terrains_peering_bit/bottom_side = 0
1:0/0 = 0
1:0/0/terrain_set = 0
1:0/0/terrain = 0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -12, 16, -12, 16, 16, -16, 16)
1:0/0/terrains_peering_bit/right_side = 0
1:0/0/terrains_peering_bit/bottom_right_corner = 0
1:0/0/terrains_peering_bit/bottom_side = 0
1:0/0/terrains_peering_bit/bottom_left_corner = 0
1:0/0/terrains_peering_bit/left_side = 0
2:0/0 = 0
2:0/0/terrain_set = 0
2:0/0/terrain = 0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -12, 12, -12, 12, 16, -16, 16)
2:0/0/terrains_peering_bit/bottom_side = 0
2:0/0/terrains_peering_bit/bottom_left_corner = 0
2:0/0/terrains_peering_bit/left_side = 0
4:0/0 = 0
4:0/0/terrain_set = 0
4:0/0/terrain = 1
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 16, -12, 16)
4:0/0/physics_layer_0/polygon_0/one_way = true
4:0/0/terrains_peering_bit/bottom_side = 1
12:0/0 = 0
12:0/0/terrain_set = 0
12:0/0/terrain = 0
12:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
12:0/0/physics_layer_0/polygon_0/one_way = true
12:0/0/terrains_peering_bit/right_side = 0
12:0/0/terrains_peering_bit/bottom_right_corner = 0
12:0/0/terrains_peering_bit/bottom_side = 0
12:0/0/terrains_peering_bit/left_side = 0
12:0/0/terrains_peering_bit/top_side = 0
12:0/0/terrains_peering_bit/top_right_corner = 0
14:0/0 = 0
14:0/0/terrain_set = 0
14:0/0/terrain = 0
14:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
14:0/0/physics_layer_0/polygon_0/one_way = true
14:0/0/terrains_peering_bit/right_side = 0
14:0/0/terrains_peering_bit/bottom_side = 0
14:0/0/terrains_peering_bit/bottom_left_corner = 0
14:0/0/terrains_peering_bit/left_side = 0
14:0/0/terrains_peering_bit/top_left_corner = 0
14:0/0/terrains_peering_bit/top_side = 0
0:1/0 = 0
0:1/0/terrain_set = 0
0:1/0/terrain = 0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -16, 16, -16, 16, 16, -12, 16)
0:1/0/terrains_peering_bit/right_side = 0
0:1/0/terrains_peering_bit/bottom_right_corner = 0
0:1/0/terrains_peering_bit/bottom_side = 0
0:1/0/terrains_peering_bit/top_side = 0
0:1/0/terrains_peering_bit/top_right_corner = 0
1:1/0 = 0
1:1/0/terrain_set = 0
1:1/0/terrain = 0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0/terrains_peering_bit/right_side = 0
1:1/0/terrains_peering_bit/bottom_right_corner = 0
1:1/0/terrains_peering_bit/bottom_side = 0
1:1/0/terrains_peering_bit/bottom_left_corner = 0
1:1/0/terrains_peering_bit/left_side = 0
1:1/0/terrains_peering_bit/top_left_corner = 0
1:1/0/terrains_peering_bit/top_side = 0
1:1/0/terrains_peering_bit/top_right_corner = 0
2:1/0 = 0
2:1/0/terrain_set = 0
2:1/0/terrain = 0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 12, -16, 12, 16, -16, 16)
2:1/0/terrains_peering_bit/bottom_side = 0
2:1/0/terrains_peering_bit/bottom_left_corner = 0
2:1/0/terrains_peering_bit/left_side = 0
2:1/0/terrains_peering_bit/top_left_corner = 0
2:1/0/terrains_peering_bit/top_side = 0
4:1/0 = 0
4:1/0/terrain_set = 0
4:1/0/terrain = 1
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -16, 12, -16, 12, 16, -12, 16)
4:1/0/physics_layer_0/polygon_0/one_way = true
4:1/0/terrains_peering_bit/bottom_side = 1
4:1/0/terrains_peering_bit/top_side = 1
0:2/0 = 0
0:2/0/terrain_set = 0
0:2/0/terrain = 0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -16, 16, -16, 16, 16, -12, 16)
0:2/0/terrains_peering_bit/right_side = 0
0:2/0/terrains_peering_bit/top_side = 0
0:2/0/terrains_peering_bit/top_right_corner = 0
1:2/0 = 0
1:2/0/terrain_set = 0
1:2/0/terrain = 0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:2/0/terrains_peering_bit/right_side = 0
1:2/0/terrains_peering_bit/left_side = 0
1:2/0/terrains_peering_bit/top_left_corner = 0
1:2/0/terrains_peering_bit/top_side = 0
1:2/0/terrains_peering_bit/top_right_corner = 0
2:2/0 = 0
2:2/0/terrain_set = 0
2:2/0/terrain = 0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 12, -16, 12, 16, -16, 16)
2:2/0/terrains_peering_bit/left_side = 0
2:2/0/terrains_peering_bit/top_left_corner = 0
2:2/0/terrains_peering_bit/top_side = 0
4:2/0 = 0
4:2/0/terrain_set = 0
4:2/0/terrain = 1
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -16, 12, -16, 12, 16, -12, 16)
4:2/0/physics_layer_0/polygon_0/one_way = true
4:2/0/terrains_peering_bit/top_side = 1
12:2/0 = 0
12:2/0/terrain_set = 0
12:2/0/terrain = 1
12:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 12, -16, 12, 16, -16, 16)
12:2/0/physics_layer_0/polygon_0/one_way = true
12:2/0/terrains_peering_bit/bottom_side = 1
12:2/0/terrains_peering_bit/left_side = 1
12:2/0/terrains_peering_bit/top_side = 1
14:2/0 = 0
14:2/0/terrain_set = 0
14:2/0/terrain = 1
14:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -16, 16, -16, 16, 16, -12, 16)
14:2/0/physics_layer_0/polygon_0/one_way = true
14:2/0/terrains_peering_bit/right_side = 1
14:2/0/terrains_peering_bit/bottom_side = 1
14:2/0/terrains_peering_bit/top_side = 1
0:4/0 = 0
0:4/0/terrain_set = 0
0:4/0/terrain = 1
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 16, -12, 16, 16, -12, 16)
0:4/0/physics_layer_0/polygon_0/one_way = true
0:4/0/terrains_peering_bit/right_side = 1
1:4/0 = 0
1:4/0/terrain_set = 0
1:4/0/terrain = 1
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -12, 16, -12, 16, 16, -16, 16)
1:4/0/physics_layer_0/polygon_0/one_way = true
1:4/0/terrains_peering_bit/right_side = 1
1:4/0/terrains_peering_bit/left_side = 1
2:4/0 = 0
2:4/0/terrain_set = 0
2:4/0/terrain = 1
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -12, 12, -12, 12, 16, -16, 16)
2:4/0/physics_layer_0/polygon_0/one_way = true
2:4/0/terrains_peering_bit/left_side = 1
4:4/0 = 0
4:4/0/terrain_set = 0
4:4/0/terrain = 1
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 16, -12, 16)
4:4/0/physics_layer_0/polygon_0/one_way = true
6:0/0 = 0
6:0/0/terrain_set = 0
6:0/0/terrain = 0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:0/0/terrains_peering_bit/right_side = 0
6:0/0/terrains_peering_bit/bottom_side = 0
6:0/0/terrains_peering_bit/bottom_left_corner = 0
6:0/0/terrains_peering_bit/left_side = 0
6:0/0/terrains_peering_bit/top_left_corner = 0
6:0/0/terrains_peering_bit/top_side = 0
6:0/0/terrains_peering_bit/top_right_corner = 0
7:0/0 = 0
7:0/0/terrain_set = 0
7:0/0/terrain = 0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:0/0/terrains_peering_bit/right_side = 0
7:0/0/terrains_peering_bit/bottom_right_corner = 0
7:0/0/terrains_peering_bit/bottom_side = 0
7:0/0/terrains_peering_bit/left_side = 0
7:0/0/terrains_peering_bit/top_left_corner = 0
7:0/0/terrains_peering_bit/top_side = 0
7:0/0/terrains_peering_bit/top_right_corner = 0
6:1/0 = 0
6:1/0/terrain_set = 0
6:1/0/terrain = 0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:1/0/terrains_peering_bit/right_side = 0
6:1/0/terrains_peering_bit/bottom_right_corner = 0
6:1/0/terrains_peering_bit/bottom_side = 0
6:1/0/terrains_peering_bit/bottom_left_corner = 0
6:1/0/terrains_peering_bit/left_side = 0
6:1/0/terrains_peering_bit/top_left_corner = 0
6:1/0/terrains_peering_bit/top_side = 0
7:1/0 = 0
7:1/0/terrain_set = 0
7:1/0/terrain = 0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:1/0/terrains_peering_bit/right_side = 0
7:1/0/terrains_peering_bit/bottom_right_corner = 0
7:1/0/terrains_peering_bit/bottom_side = 0
7:1/0/terrains_peering_bit/bottom_left_corner = 0
7:1/0/terrains_peering_bit/left_side = 0
7:1/0/terrains_peering_bit/top_side = 0
7:1/0/terrains_peering_bit/top_right_corner = 0
12:4/0 = 0
12:4/0/terrain_set = 0
12:4/0/terrain = 1
12:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 12, -16, 12, 16, -16, 16)
12:4/0/physics_layer_0/polygon_0/one_way = true
12:4/0/terrains_peering_bit/left_side = 1
12:4/0/terrains_peering_bit/top_side = 1
14:4/0 = 0
14:4/0/terrain_set = 0
14:4/0/terrain = 1
14:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -16, 16, -16, 16, 16, -12, 16)
14:4/0/physics_layer_0/polygon_0/one_way = true
14:4/0/terrains_peering_bit/right_side = 1
14:4/0/terrains_peering_bit/top_side = 1
14:6/0 = 0
14:6/0/terrain_set = 0
14:6/0/terrain = 1
14:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -12, 12, -12, 12, 16, -16, 16)
14:6/0/physics_layer_0/polygon_0/one_way = true
14:6/0/terrains_peering_bit/bottom_side = 1
14:6/0/terrains_peering_bit/left_side = 1
12:6/0 = 0
12:6/0/terrain_set = 0
12:6/0/terrain = 1
12:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 16, -12, 16, 16, -12, 16)
12:6/0/physics_layer_0/polygon_0/one_way = true
12:6/0/terrains_peering_bit/right_side = 1
12:6/0/terrains_peering_bit/bottom_side = 1
12:8/0 = 0
12:8/0/terrain_set = 0
12:8/0/terrain = 1
12:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -12, 16, -12, 16, 16, -16, 16)
12:8/0/physics_layer_0/polygon_0/one_way = true
12:8/0/terrains_peering_bit/right_side = 1
12:8/0/terrains_peering_bit/bottom_side = 1
12:8/0/terrains_peering_bit/left_side = 1
14:8/0 = 0
14:8/0/terrain_set = 0
14:8/0/terrain = 1
14:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
14:8/0/physics_layer_0/polygon_0/one_way = true
14:8/0/terrains_peering_bit/right_side = 1
14:8/0/terrains_peering_bit/left_side = 1
14:8/0/terrains_peering_bit/top_side = 1

[sub_resource type="TileSet" id="TileSet_r21ok"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 1
terrain_set_0/mode = 0
terrain_set_0/terrain_0/name = "walls"
terrain_set_0/terrain_0/color = Color(0.5, 0.34375, 0.25, 1)
terrain_set_0/terrain_1/name = "walls2"
terrain_set_0/terrain_1/color = Color(0.274148, 0.428187, 0.74877, 1)
sources/0 = SubResource("TileSetAtlasSource_dqwby")

[node name="DeadEndRight" type="Node2D"]
script = SubResource("GDScript_4qqq8")
debug_draw = false

[node name="TileMapLayer" type="TileMapLayer" parent="."]
tile_map_data = PackedByteArray("")
tile_set = SubResource("TileSet_r21ok")
script = ExtResource("2_4l14j")
has_left_connection = true

[node name="SpawnManager" parent="." instance=ExtResource("3_n43he")]

[node name="EnemySpawner" parent="." instance=ExtResource("4_swpoc")]
position = Vector2(1299, 821)

[node name="EnemySpawner2" parent="." instance=ExtResource("4_swpoc")]
position = Vector2(1678, 709)

[node name="EnemySpawner3" parent="." instance=ExtResource("4_swpoc")]
position = Vector2(418, 833)

[node name="EnemySpawner4" parent="." instance=ExtResource("4_swpoc")]
position = Vector2(1454, 297)
